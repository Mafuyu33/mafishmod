plugins {
	id 'fabric-loom' version '1.5-SNAPSHOT'
	id 'maven-publish'
}

version = project.mod_version
group = project.maven_group

base {
	archivesName = project.archives_base_name
}

loom {
	accessWidenerPath = file("src/main/resources/mafishmod.accesswidener")
}

repositories {
	maven {
		url = "https://cursemaven.com"
	}
	maven { url "https://maven.shedaniel.me/" }
	maven { url "https://maven.terraformersmc.com/releases/" }
//	maven {
//		name = "Modrinth"
//		url = "https://api.modrinth.com/maven"
//		content {
//			includeGroup "maven.modrinth"
//		}
//	}



	// Add repositories to retrieve artifacts from in here.
	// You should only use this when depending on other mods because
	// Loom adds the essential maven repositories to download Minecraft and libraries from automatically.
	// See https://docs.gradle.org/current/userguide/declaring_repositories.html
	// for more information about repositories.
}

fabricApi {
	configureDataGeneration()
}

//loom {
//	accessWidenerPath = file("src/main/resources/name.accesswidener")
//}



dependencies {



	// To change the versions see the gradle.properties file
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	// Fabric API. This is technically optional, but you probably want it anyway.
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"
	// Uncomment the following line to enable the deprecated Fabric API modules. 
	// These are included in the Fabric API production distribution and allow you to update your mod to the latest modules at a later more convenient time.

	// modImplementation "net.fabricmc.fabric-api:fabric-api-deprecated:${project.fabric_version}"

	modImplementation "dev.architectury:architectury-fabric:11.0.12"
	modImplementation "curse.maven:mc-vr-api-591092:5249667"



	modApi(include("me.shedaniel.cloth:cloth-config-fabric:13.0.121")) {
		exclude(group: "net.fabricmc.fabric-api")
	}

	modApi "com.terraformersmc:modmenu:9.2.0-beta.2"

//	modImplementation "maven.modrinth:modmenu:9.0.0"
//	modImplementation "curse.maven:vivecraft-667903:4941634"
//
//	// The below are all needed for Vivecraft to run in a dev environment
//	implementation 'com.electronwill.night-config:toml:3.6.0'
//	implementation("org.lwjgl:lwjgl-openvr:3.3.1")
//	implementation("org.lwjgl:lwjgl-openvr:3.3.1:natives-linux")
//	implementation("org.lwjgl:lwjgl-openvr:3.3.1:natives-macos")
//	implementation("org.lwjgl:lwjgl-openvr:3.3.1:natives-windows")
}

//remapJar {
//	// 指定输入文件，通常是你项目的主JAR
//	inputFile = file("${buildDir}/devlibs/${project.archivesBaseName}-${project.version}-dev.jar")
//
//	// 设置源命名空间和目标命名空间
//	sourceNamespace = "named"
//	targetNamespace = "intermediary"
//
//	// 添加要作为嵌套JAR包括的JAR
//	nestedJars.from file(".gradle/loom-cache/remapped_mods/net_fabricmc_yarn_1_20_4_1_20_4_build_3_v2/me/shedaniel/cloth/cloth-config-fabric/13.0.121/cloth-config-fabric-13.0.121-fabric.jar")
//
//	// 确保嵌套的JAR在输出文件中被包括
//	addNestedDependencies = true
//}


processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.release = 17
}

java {
	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
	// if it is present.
	// If you remove this line, sources will not be generated.
	withSourcesJar()

	sourceCompatibility = JavaVersion.VERSION_17
	targetCompatibility = JavaVersion.VERSION_17
}

jar {
//	duplicatesStrategy = DuplicatesStrategy.INHERIT
	from("LICENSE") {
		rename { "${it}_${project.base.archivesName.get()}"}
	}
//	// 包含所有运行时类路径依赖到最终的Jar
//	from {
//		configurations.runtimeClasspath.findAll {
//			it.name.startsWith("cloth-config-fabric")
//		}.collect { it.isDirectory() ? it : zipTree(it) }
//	}
}

// configure the maven publication
publishing {
	publications {
		mavenJava(MavenPublication) {
			from components.java
		}
	}

	// See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
	repositories {
		// Add repositories to publish to here.
		// Notice: This block does NOT have the same function as the block in the top level.
		// The repositories here will be used for publishing your artifact, not for
		// retrieving dependencies.
	}
}